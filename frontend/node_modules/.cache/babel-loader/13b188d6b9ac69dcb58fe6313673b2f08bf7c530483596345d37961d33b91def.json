{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madha\\\\OneDrive\\\\Desktop\\\\HackRux\\\\HackRux\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { uploadDocument, querySystem } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [query, setQuery] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const handleUpload = async () => {\n    if (file) {\n      await uploadDocument(file);\n      alert(\"Document uploaded!\");\n    }\n  };\n  const handleQuery = async () => {\n    const res = await querySystem(query);\n    setResponse(JSON.stringify(res.response, null, 2));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LLM Document Processing System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload Document\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"Enter your query\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleQuery,\n      children: \"Submit Query\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DqZny78fztettbmCih7vy7LH264=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","uploadDocument","querySystem","jsxDEV","_jsxDEV","App","_s","file","setFile","query","setQuery","response","setResponse","handleUpload","alert","handleQuery","res","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","files","onClick","value","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/madha/OneDrive/Desktop/HackRux/HackRux/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { uploadDocument, querySystem } from \"./api\";\r\n\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [response, setResponse] = useState(\"\");\r\n\r\n  const handleUpload = async () => {\r\n    if (file) {\r\n      await uploadDocument(file);\r\n      alert(\"Document uploaded!\");\r\n    }\r\n  };\r\n\r\n  const handleQuery = async () => {\r\n    const res = await querySystem(query);\r\n    setResponse(JSON.stringify(res.response, null, 2));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>LLM Document Processing System</h1>\r\n      <input type=\"file\" onChange={e => setFile(e.target.files[0])} />\r\n      <button onClick={handleUpload}>Upload Document</button>\r\n      <br /><br />\r\n      <input\r\n        type=\"text\"\r\n        value={query}\r\n        onChange={e => setQuery(e.target.value)}\r\n        placeholder=\"Enter your query\"\r\n      />\r\n      <button onClick={handleQuery}>Submit Query</button>\r\n      <pre>{response}</pre>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,EAAEC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIN,IAAI,EAAE;MACR,MAAMN,cAAc,CAACM,IAAI,CAAC;MAC1BO,KAAK,CAAC,oBAAoB,CAAC;IAC7B;EACF,CAAC;EAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,GAAG,GAAG,MAAMd,WAAW,CAACO,KAAK,CAAC;IACpCG,WAAW,CAACK,IAAI,CAACC,SAAS,CAACF,GAAG,CAACL,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;EACpD,CAAC;EAED,oBACEP,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvCnB,OAAA;MAAOoB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEC,CAAC,IAAIlB,OAAO,CAACkB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChEnB,OAAA;MAAQyB,OAAO,EAAEhB,YAAa;MAAAM,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvDnB,OAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAAAnB,OAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACZnB,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXM,KAAK,EAAErB,KAAM;MACbgB,QAAQ,EAAEC,CAAC,IAAIhB,QAAQ,CAACgB,CAAC,CAACC,MAAM,CAACG,KAAK,CAAE;MACxCC,WAAW,EAAC;IAAkB;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFnB,OAAA;MAAQyB,OAAO,EAAEd,WAAY;MAAAI,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnDnB,OAAA;MAAAe,QAAA,EAAMR;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV;AAACjB,EAAA,CAjCQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}